@model DAL.Models.Product

@{
    ViewData["Title"] = "Update";
}

<h1>Update</h1>

<h4>Product</h4>
<hr />
@using (Html.BeginForm("UpdateProduct", "Products", FormMethod.Post)) {
    <div class="row">
        <div class="col-md-4">
            <form asp-action="UpdateProduct">

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2"})
                    @Html.EditorFor(model => model.ProductName, new {htmlAttributes = new { @class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.ProductName,"" ,new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2"})
                    @Html.EditorFor(model => model.Price, new {htmlAttributes = new { @class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Price,"" ,new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ammount, htmlAttributes: new { @class = "control-label col-md-2"})
                    @Html.EditorFor(model => model.Ammount, new {htmlAttributes = new { @class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Ammount,"" ,new { @class = "text-danger" })
                </div>
                <hr />
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </form>
        </div>
    </div>
}
<br />
<div>
    <a asp-action="Index" class="btn btn-success">Back to List</a>
</div>



@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


}
